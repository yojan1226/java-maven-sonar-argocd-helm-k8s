pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  environment {
      SONAR_URL = "http://13.201.29.242:9000"
  }
  stages {

    stage('Prepare Java 17') {
      steps {
        sh '''
          apt-get update && \
          apt-get install -y openjdk-17-jdk && \
          update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-17-openjdk-amd64/bin/java 1711 && \
          update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
          java -version
        '''
      }
    }

    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        dir('spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        dir('spring-boot-app') {
          withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "honey120ar/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            dir('spring-boot-app') {
                sh 'docker build -t ${DOCKER_IMAGE} .'
                def dockerImage = docker.image("${DOCKER_IMAGE}")
                docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                    dockerImage.push()
                }
            }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
          GIT_REPO_NAME = "java-maven-sonar-argocd-helm-k8s"
          GIT_USER_NAME = "yojan1226"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
              git config user.email "yojansawdekar127@gmail.com"
              git config user.name "yogeshwar sawdekar"
              BUILD_NUMBER=${BUILD_NUMBER}
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
              git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }

  }
}
